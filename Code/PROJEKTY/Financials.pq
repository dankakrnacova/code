// Horizon

let
    Source = SharePoint.Files("https://dxcportal.sharepoint.com/sites/GIDCEEITO_CloudFinancedata", [ApiVersion = 15]),
    FilteredPath = Table.SelectRows(Source, each ([Folder Path] = "https://dxcportal.sharepoint.com/sites/GIDCEEITO_CloudFinancedata/Shared Documents/General/Horizon, Netwaver, CSC details/")),
    #"Filtered Rows" = Table.SelectRows(FilteredPath, each Text.Contains([Name], "AMS") and Text.Contains([Name], "LASTONE")),
    #"Filtered Hidden Files1" = Table.SelectRows(#"Filtered Rows", each [Attributes]?[Hidden]? <> true),
    #"Invoke Custom Function1" = Table.AddColumn(#"Filtered Hidden Files1", "Transform File (2)", each #"Transform File (2)"([Content])),
    #"Removed Other Columns1" = Table.SelectColumns(#"Invoke Custom Function1", {"Name", "Transform File (2)"}),
    #"Renamed Columns" = Table.RenameColumns(#"Removed Other Columns1",{{"Name", "Source.Name"}}),
    #"Expanded Transform File (2)" = Table.ExpandTableColumn(#"Renamed Columns", "Transform File (2)", {"Name", "Data"}, {"Name", "Data"}),
    #"Filtered Rows1" = Table.SelectRows(#"Expanded Transform File (2)", each Text.Contains([Name], "Raw") and not Text.Contains([Name], "Database")),
    #"Expanded Data" = Table.ExpandTableColumn(#"Filtered Rows1", "Data", {"Column1", "Column2", "Column3", "Column4", "Column5", "Column6", "Column7", "Column8", "Column9", "Column10", "Column11", "Column12", "Column13", "Column14", "Column15", "Column16", "Column17", "Column18", "Column19", "Column20", "Column21", "Column22", "Column23", "Column24", "Column25", "Column26", "Column27", "Column28", "Column29", "Column30", "Column31", "Column32", "Column33", "Column34", "Column35", "Column36", "Column37", "Column38", "Column39", "Column40", "Column41", "Column42", "Column43", "Column44", "Column45", "Column46", "Column47", "Column48", "Column49", "Column50", "Column51", "Column52", "Column53", "Column54", "Column55", "Column56", "Column57", "Column58", "Column59", "Column60", "Column61", "Column62", "Column63", "Column64", "Column65", "Column66", "Column67", "Column68", "Column69", "Column70", "Column71"}, {"Column1", "Column2", "Column3", "Column4", "Column5", "Column6", "Column7", "Column8", "Column9", "Column10", "Column11", "Column12", "Column13", "Column14", "Column15", "Column16", "Column17", "Column18", "Column19", "Column20", "Column21", "Column22", "Column23", "Column24", "Column25", "Column26", "Column27", "Column28", "Column29", "Column30", "Column31", "Column32", "Column33", "Column34", "Column35", "Column36", "Column37", "Column38", "Column39", "Column40", "Column41", "Column42", "Column43", "Column44", "Column45", "Column46", "Column47", "Column48", "Column49", "Column50", "Column51", "Column52", "Column53", "Column54", "Column55", "Column56", "Column57", "Column58", "Column59", "Column60", "Column61", "Column62", "Column63", "Column64", "Column65", "Column66", "Column67", "Column68", "Column69", "Column70", "Column71"}),
    #"Promoted Headers" = Table.PromoteHeaders(#"Expanded Data", [PromoteAllScalars=true]),
    #"Replaced Null Code" = Table.ReplaceValue(#"Promoted Headers", null, each _[GSAP Profit Center], Replacer.ReplaceValue, {"HZ Cost Object Code"}),
    #"Changed Type" = Table.TransformColumnTypes(#"Replaced Null Code",{{"Actuals Raw Data", type text}, {"Scenario", type text}, {"Financial Data Source", type text}, {"Fiscal Year", type text}, {"Fiscal Period", type text}, {"Month", type text}, {"LH Profit Center Name", type text}, {"C1/BPC Profit Center", type text}, {"GSAP Profit Center", type any}, {"HZ Cost Object Code", type text}, {"HZ Cost Object Name", type text}, {"POID Major Offering", type any}, {"POID Major Offering Name", type any}, {"LH Profit Center", type text}, {"Legal Company Code", type text}, {"Legal Company Name", type text}, {"Country Code", type text}, {"Country Name", type text}, {"POID Outlook ID", Int64.Type}, {"Posting Object ID", Int64.Type}, {"Posting Object Name", type text}, {"HZ WBS Code", type any}, {"HZ WBS Name", type any}, {"POID WBS Resp Cost Ctr", type any}, {"POID Final Cost Object", type text}, {"POID Cost Category", type text}, {"Mgmt Region L03 Code", type text}, {"Mgmt Region L03 Code Desc", type text}, {"Mgmt Region L04 Code", type text}, {"Mgmt Region L04 Code Desc", type text}, {"Mgmt Region L05 Code", type text}, {"Mgmt Region L05 Code Desc", type text}, {"Mgmt Region L06 Code", type text}, {"Mgmt Region L06 Code Desc", type text}, {"Mgmt Region L07 Code", type any}, {"Mgmt Region L07 Code Desc", type any}, {"Mgmt Region L08 Code", type any}, {"Mgmt Region L08 Code Desc", type any}, {"Business Area Name", type text}, {"Business Area Code", type text}, {"Build / Sell / Deliver L1", type text}, {"Build / Sell / Deliver L2", type text}, {"POG 09 Name", type text}, {"POG 09 Code", type text}, {"GL Account", Int64.Type}, {"GL Account Name", type text}, {"Local Currency Code", type text}, {"Cost Stack Mgmt L03 Name", type text}, {"Cost Stack Mgmt L04 Name", type text}, {"Cost Stack Mgmt L05 Name", type text}, {"Cost Stack Mgmt L06 Name", type text}, {"Cost Stack Mgmt L07 Name", type text}, {"Cost Stack Mgmt L08 Name", type text}, {"Cost Stack Mgmt L09 Name", type text}, {"Cost Stack Mgmt L10 Name", type text}, {"Document Currency", type number}, {"Document Currency Code", type text}, {"Local Currency", type number}, {"Group Currency USD", type number}, {"Fixed Budget USD", type number}, {"USD GAAP Currency", type number}, {"Fixed Budget USD Relief", type number}, {"Fixed Budget USD Expense", type number}, {"USD GAAP Relief", type number}, {"USD GAAP Expense", type number}, {"Headcount Type", Int64.Type}, {"Headcount Type Name", type text}, {"Total Headcount", Int64.Type}, {"Mgmt Region L01 Code", type text}, {"Mgmt Region L02 Code", type text}}),
    #"Removed Other Columns" = Table.SelectColumns(#"Changed Type",{"Fiscal Period", "HZ Cost Object Code", "Cost Stack Mgmt L08 Name", "Cost Stack Mgmt L09 Name", "Fixed Budget USD", "Mgmt Region L05 Code"}),
    FilterMgmtRegion = Table.SelectRows(#"Removed Other Columns", each [Mgmt Region L05 Code] = "MH-W3P8" and [Cost Stack Mgmt L09 Name] <> "Resale/Pass Through"),
    AddedYearMonthKey = Table.AddColumn(FilterMgmtRegion, "YearMonthKey", each Text.Combine(List.RemoveNulls(List.Transform(Text.ToList([Fiscal Period]),each if Value.Is(Value.FromText(_), type number) then _ else null)))),
    AddedFiscalMonth = Table.AddColumn(AddedYearMonthKey, "Fiscal Month", each Text.End(Text.From([YearMonthKey], "en-150"), 2)),
    AddedFiscalYear = Table.AddColumn(AddedFiscalMonth, "Fiscal Year", each Text.Start(Text.From([YearMonthKey], "en-150"), 4)),
    #"Changed Type1" = Table.TransformColumnTypes(AddedFiscalYear,{{"Fiscal Year", Int64.Type}}),
    AddedDate = Table.AddColumn(#"Changed Type1", "Date",
                                                                each if [Fiscal Month] = "01" then "1." & "4." & Text.From([Fiscal Year]-1)
                                                                else if [Fiscal Month] = "02" then "1." & "5." & Text.From([Fiscal Year]-1)
                                                                else if [Fiscal Month] = "03" then "1." & "6." & Text.From([Fiscal Year]-1)
                                                                else if [Fiscal Month] = "04" then "1." & "7." & Text.From([Fiscal Year]-1)
                                                                else if [Fiscal Month] = "05" then "1." & "8." & Text.From([Fiscal Year]-1)
                                                                else if [Fiscal Month] = "06" then "1." & "9." & Text.From([Fiscal Year]-1)
                                                                else if [Fiscal Month] = "07" then "1." & "10." & Text.From([Fiscal Year]-1)
                                                                else if [Fiscal Month] = "08" then "1." & "11." & Text.From([Fiscal Year]-1)
                                                                else if [Fiscal Month] = "09" then "1." & "12." & Text.From([Fiscal Year]-1)
                                                                else if [Fiscal Month] = "10" then "1." & "1." & Text.From([Fiscal Year])
                                                                else if [Fiscal Month] = "11" then "1." & "2." & Text.From([Fiscal Year])
                                                                else if [Fiscal Month] = "12" then "1." & "3." & Text.From([Fiscal Year])
                                                                else null
                                                        ),
    #"Changed Type2" = Table.TransformColumnTypes(AddedDate,{{"Date", type date}}),
    #"Removed Columns" = Table.RemoveColumns(#"Changed Type2",{"YearMonthKey", "Fiscal Month", "Fiscal Year", "Mgmt Region L05 Code"})
in
    #"Removed Columns"

// CLC

let
    Source = SharePoint.Files("https://dxcportal.sharepoint.com/sites/GIDCEEITO_CloudFinancedata", [ApiVersion = 15]),
    #"Filtered Rows" = Table.SelectRows(Source, each Text.Contains([Name], "List of CLC") and Text.Contains([Name], "February")),
    #"Filtered Hidden Files1" = Table.SelectRows(#"Filtered Rows", each [Attributes]?[Hidden]? <> true),
    #"Invoke Custom Function1" = Table.AddColumn(#"Filtered Hidden Files1", "Transform File (3)", each #"Transform File (3)"([Content])),
    #"Renamed Columns1" = Table.RenameColumns(#"Invoke Custom Function1", {"Name", "Source.Name"}),
    #"Removed Other Columns1" = Table.SelectColumns(#"Renamed Columns1", {"Source.Name", "Transform File (3)"}),
    #"Expanded Transform File (3)" = Table.ExpandTableColumn(#"Removed Other Columns1", "Transform File (3)", {"Column1", "Column2", "Column3", "L6 Manager", "L6 Manager_1", "L6 Manager_2", "L5 Manager", "L5 Manager_3", "L5 Manager_4", "Column10", "Column11", "Column12", "Column13", "Column14", "Column15", "Column16", "Column17", "Column18"}, {"Column1", "Column2", "Column3", "L6 Manager", "L6 Manager_1", "L6 Manager_2", "L5 Manager", "L5 Manager_3", "L5 Manager_4", "Column10", "Column11", "Column12", "Column13", "Column14", "Column15", "Column16", "Column17", "Column18"}),
    #"Promoted Headers" = Table.PromoteHeaders(#"Expanded Transform File (3)", [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"CostCenter Code", type text}, {"Finance", type text}, {"Country", type text}, {"Employee ID", Int64.Type}, {"Employee Name", type text}, {"Email", type text}, {"Employee ID_1", Int64.Type}, {"Employee Name_2", type text}, {"Email_3", type text}, {"Date", type date}}),
    #"Renamed Columns" = Table.RenameColumns(#"Changed Type",{{"Employee ID", "L6_EID"}, {"Employee Name", "L6_Name"}, {"CostCenter Code", "CostCenter_Code"}, {"Email", "L6_Email"}, {"Employee ID_1", "L5_EID"}, {"Employee Name_2", "L5_Name"}, {"Email_3", "L5_Email"}}),
    #"Removed Blank Rows" = Table.SelectRows(#"Renamed Columns", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {"", null}))),
    #"Filtered Rows1" = Table.SelectRows(#"Removed Blank Rows", each ([CostCenter_Code] <> null)),
    #"Replaced Value" = Table.ReplaceValue(#"Filtered Rows1","Pavel Novak","Novak, Pavel",Replacer.ReplaceText,{"L6_Name"}),
    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value","Ziak,Juraj","Ziak, Juraj",Replacer.ReplaceText,{"L6_Name"})
in
    #"Replaced Value1"

// Employees - actual

let
    Source = SharePoint.Files("https://dxcportal.sharepoint.com/sites/GIDCEEITO_CloudFinancedata", [ApiVersion = 15]),
    FilteredPath = Table.SelectRows(Source, each ([Folder Path] = "https://dxcportal.sharepoint.com/sites/GIDCEEITO_CloudFinancedata/Shared Documents/General/WorkDay HC Data/")),
    FilteredFile = Table.SelectRows(FilteredPath, each Text.Contains([Name], "Headcount") and Text.Contains([Name], "actual")),
    #"Filtered Hidden Files1" = Table.SelectRows(FilteredFile, each [Attributes]?[Hidden]? <> true),
    #"Invoke Custom Function1" = Table.AddColumn(#"Filtered Hidden Files1", "Transform File", each #"Transform File"([Content])),
    #"Renamed Columns1" = Table.RenameColumns(#"Invoke Custom Function1", {"Name", "Source.Name"}),
    #"Removed Other Columns1" = Table.SelectColumns(#"Renamed Columns1", {"Source.Name", "Transform File"}),
    #"Expanded Table Column1" = Table.ExpandTableColumn(#"Removed Other Columns1", "Transform File", Table.ColumnNames(#"Transform File"(#"Sample File"))),
    #"Changed Type" = Table.TransformColumnTypes(#"Expanded Table Column1",{{"Source.Name", type text}, {"Name", type text}, {"Data", type any}, {"Item", type text}, {"Kind", type text}, {"Hidden", type logical}}),
    #"Filtered Rows" = Table.SelectRows(#"Changed Type", each ([Kind] = "Sheet")),
    #"Expanded Data" = Table.ExpandTableColumn(#"Filtered Rows", "Data", {"Column1", "Column2", "Column3", "Column4", "Column5", "Column6", "Column7", "Column8", "Column9", "Column10", "Column11", "Column12", "Column13", "Column14", "Column15", "Column16", "Column17", "Column18", "Column19", "Column20", "Column21", "Column22", "Column23", "Column24", "Column25", "Column26", "Column27", "Column28", "Column29", "Column30", "Column31", "Column32", "Column33", "Column34", "Column35", "Column36", "Column37", "Column38", "Column39", "Column40", "Column41", "Column42", "Column43", "Column44", "Column45", "Column46", "Column47", "Column48", "Column49", "Column50", "Column51", "Column52", "Column53", "Column54", "Column55", "Column56", "Column57", "Column58", "Column59", "Column60", "Column61", "Column62", "Column63", "Column64", "Column65", "Column66", "Column67", "Column68", "Column69", "Column70", "Column71", "Column72", "Column73", "Column74", "Column75", "Column76", "Column77", "Column78", "Column79", "Column80", "Column81", "Column82", "Column83", "Column84", "Column85", "Column86", "Column87", "Column88", "Column89", "Column90", "Column91", "Column92", "Column93", "Column94", "Column95", "Column96", "Column97"}, {"Column1", "Column2", "Column3", "Column4", "Column5", "Column6", "Column7", "Column8", "Column9", "Column10", "Column11", "Column12", "Column13", "Column14", "Column15", "Column16", "Column17", "Column18", "Column19", "Column20", "Column21", "Column22", "Column23", "Column24", "Column25", "Column26", "Column27", "Column28", "Column29", "Column30", "Column31", "Column32", "Column33", "Column34", "Column35", "Column36", "Column37", "Column38", "Column39", "Column40", "Column41", "Column42", "Column43", "Column44", "Column45", "Column46", "Column47", "Column48", "Column49", "Column50", "Column51", "Column52", "Column53", "Column54", "Column55", "Column56", "Column57", "Column58", "Column59", "Column60", "Column61", "Column62", "Column63", "Column64", "Column65", "Column66", "Column67", "Column68", "Column69", "Column70", "Column71", "Column72", "Column73", "Column74", "Column75", "Column76", "Column77", "Column78", "Column79", "Column80", "Column81", "Column82", "Column83", "Column84", "Column85", "Column86", "Column87", "Column88", "Column89", "Column90", "Column91", "Column92", "Column93", "Column94", "Column95", "Column96", "Column97"}),
    #"Removed Top Rows" = Table.Skip(#"Expanded Data",2),
    #"Promoted Headers" = Table.PromoteHeaders(#"Removed Top Rows", [PromoteAllScalars=true]),
    #"Removed Other Columns" = Table.SelectColumns(#"Promoted Headers",{"Employee ID", "Employee Name", "Shortname", "Email", "Employee Status", "Employee Type", "Management Level", "Job Level", "Job Title", "Job Family", "Job Family Group", "Job Code", "Job Type", "Is Manager", "Span of Control Direct", "Span of Control Total", "FTE", "Time Type", "Position ID (Workday)", "Position Type", "Country Group", "Work Location Region", "Work Location Country", "Work Location State", "Work Location City", "Work Location", "Work Location Code", "Work Location Type", "CostCenter Code", "CostCenter Desc", "Revenue Region L1", "Revenue Region L3", "BSDHI L1", "BSDHI L3", "DXCMH L2 Name", "DXCMH L3 Name", "DXCMH L4 Name", "DXCMH L5 Name", "DXCMH L6 Name", "DXCMH L7 Name", "People Mgr Name", "People Mgr Email", "People Mgr Employee ID", "People Mgr Layer Desc", "People Mgr Layer Code", "People Mgr Layer No", "People Mgr L2 Chief", "People Mgr L2 Desc", "People Mgr L2 Email", "People Mgr L3 Chief", "People Mgr L3 Desc", "People Mgr L3 Email", "People Mgr L4 Chief", "People Mgr L4 Desc", "People Mgr L4 Email", "People Mgr L5 Chief", "People Mgr L5 Desc", "People Mgr L6 Chief", "People Mgr L6 Desc", "People Mgr L7 Chief", "People Mgr L7 Desc", "People Mgr L8 Chief", "People Mgr L8 Desc", "Business Mgr Name", "Business Mgr Email", "Business Mgr Layer Desc", "Business Mgr Layer Code", "Business Mgr Layer No", "Business Mgr L2 Chief", "Business Mgr L2 Email", "Business Mgr L3 Chief", "Business Mgr L3 Email", "Business Mgr L4 Chief", "Business Mgr L5 Chief", "Business Mgr L6 Chief", "Business Mgr L7 Chief", "Business Mgr L8 Chief", "GIDC Flag", "Client ID", "Client Name", "Client Industry", "Offering Family", "Major Offering", "Legacy Source", "Company Desc", "Company Code", "Acquisition Load", "Acquisition Desc", "Contractor Conversion", "Technology Stack", "Offering(CC based)", "Tenure", "Continous Service Date (Benefits)", "Hire Date", "Reported Hire Date", "Month", "PIT Date"}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Removed Other Columns",{{"Employee ID", Int64.Type}, {"Employee Name", type text}, {"Shortname", type text}, {"Email", type text}, {"Employee Status", type text}, {"Employee Type", type text}, {"Management Level", type text}, {"Job Level", Int64.Type}, {"Job Title", type text}, {"Job Family", type text}, {"Job Family Group", type text}, {"Job Code", type text}, {"Job Type", type text}, {"Is Manager", type text}, {"Span of Control Direct", Int64.Type}, {"Span of Control Total", Int64.Type}, {"FTE", Int64.Type}, {"Time Type", type text}, {"Position ID (Workday)", Int64.Type}, {"Position Type", type text}, {"Country Group", type text}, {"Work Location Region", type text}, {"Work Location Country", type text}, {"Work Location State", type text}, {"Work Location City", type text}, {"Work Location", type text}, {"Work Location Code", type text}, {"Work Location Type", type text}, {"CostCenter Code", type text}, {"CostCenter Desc", type text}, {"Revenue Region L1", type text}, {"Revenue Region L3", type text}, {"BSDHI L1", type text}, {"BSDHI L3", type text}, {"DXCMH L2 Name", type text}, {"DXCMH L3 Name", type text}, {"DXCMH L4 Name", type text}, {"DXCMH L5 Name", type text}, {"DXCMH L6 Name", type text}, {"DXCMH L7 Name", type text}, {"People Mgr Name", type text}, {"People Mgr Email", type text}, {"People Mgr Employee ID", Int64.Type}, {"People Mgr Layer Desc", type text}, {"People Mgr Layer Code", Int64.Type}, {"People Mgr Layer No", Int64.Type}, {"People Mgr L2 Chief", type text}, {"People Mgr L2 Desc", type text}, {"People Mgr L2 Email", type text}, {"People Mgr L3 Chief", type text}, {"People Mgr L3 Desc", type text}, {"People Mgr L3 Email", type text}, {"People Mgr L4 Chief", type text}, {"People Mgr L4 Desc", type text}, {"People Mgr L4 Email", type text}, {"People Mgr L5 Chief", type text}, {"People Mgr L5 Desc", type text}, {"People Mgr L6 Chief", type text}, {"People Mgr L6 Desc", type text}, {"People Mgr L7 Chief", type text}, {"People Mgr L7 Desc", type text}, {"People Mgr L8 Chief", type text}, {"People Mgr L8 Desc", type text}, {"Business Mgr Name", type text}, {"Business Mgr Email", type text}, {"Business Mgr Layer Desc", type text}, {"Business Mgr Layer Code", type text}, {"Business Mgr Layer No", Int64.Type}, {"Business Mgr L2 Chief", type text}, {"Business Mgr L2 Email", type text}, {"Business Mgr L3 Chief", type text}, {"Business Mgr L3 Email", type text}, {"Business Mgr L4 Chief", type text}, {"Business Mgr L5 Chief", type text}, {"Business Mgr L6 Chief", type text}, {"Business Mgr L7 Chief", type text}, {"Business Mgr L8 Chief", type text}, {"GIDC Flag", type text}, {"Client ID", Int64.Type}, {"Client Name", type text}, {"Client Industry", type text}, {"Offering Family", type text}, {"Major Offering", type text}, {"Legacy Source", type text}, {"Company Desc", type text}, {"Company Code", type text}, {"Acquisition Load", type text}, {"Acquisition Desc", type text}, {"Contractor Conversion", type text}, {"Technology Stack", type text}, {"Offering(CC based)", type text}, {"Tenure", type number}, {"Continous Service Date (Benefits)", type date}, {"Hire Date", type date}, {"Reported Hire Date", type date}, {"Month", type date}, {"PIT Date", type date}}),
    #"Filtered Rows1" = Table.SelectRows(#"Changed Type1", each ([People Mgr L4 Email] = "peter.mrazik@dxc.com") and ([Employee Status] = "Active")),
    #"Replaced Value" = Table.ReplaceValue(#"Filtered Rows1","",null,Replacer.ReplaceValue,{"People Mgr L6 Chief"}),
    Custom1 = Table.ReplaceValue(#"Replaced Value", null, each _[People Mgr L5 Chief], Replacer.ReplaceValue, {"People Mgr L6 Chief"})
in
    Custom1

// Employees

let
    Source = SharePoint.Files("https://dxcportal.sharepoint.com/sites/GIDCEEITO_CloudFinancedata", [ApiVersion = 15]),
    FilteredPath = Table.SelectRows(Source, each ([Folder Path] = "https://dxcportal.sharepoint.com/sites/GIDCEEITO_CloudFinancedata/Shared Documents/General/WorkDay HC Data/")),
    FilteredFile = Table.SelectRows(FilteredPath, each Text.Contains([Name], "ReportPBI")),
    #"Filtered Hidden Files1" = Table.SelectRows(FilteredFile, each [Attributes]?[Hidden]? <> true),
    #"Invoke Custom Function1" = Table.AddColumn(#"Filtered Hidden Files1", "Transform File", each #"Transform File"([Content])),
    #"Renamed Columns1" = Table.RenameColumns(#"Invoke Custom Function1", {"Name", "Source.Name"}),
    #"Removed Other Columns1" = Table.SelectColumns(#"Renamed Columns1", {"Source.Name", "Transform File"}),
    #"Expanded Table Column1" = Table.ExpandTableColumn(#"Removed Other Columns1", "Transform File", Table.ColumnNames(#"Transform File"(#"Sample File"))),
    #"Changed Type" = Table.TransformColumnTypes(#"Expanded Table Column1",{{"Source.Name", type text}, {"Name", type text}, {"Data", type any}, {"Item", type text}, {"Kind", type text}, {"Hidden", type logical}}),
    #"Filtered Rows" = Table.SelectRows(#"Changed Type", each ([Kind] = "Sheet")),
    #"Expanded Data" = Table.ExpandTableColumn(#"Filtered Rows", "Data", {"Column1", "Column2", "Column3", "Column4", "Column5", "Column6", "Column7", "Column8", "Column9", "Column10", "Column11", "Column12", "Column13", "Column14", "Column15", "Column16", "Column17", "Column18", "Column19", "Column20", "Column21", "Column22", "Column23", "Column24", "Column25", "Column26", "Column27", "Column28", "Column29", "Column30", "Column31", "Column32", "Column33", "Column34", "Column35", "Column36", "Column37", "Column38", "Column39", "Column40", "Column41", "Column42", "Column43", "Column44", "Column45", "Column46", "Column47", "Column48", "Column49", "Column50", "Column51", "Column52", "Column53", "Column54", "Column55", "Column56", "Column57", "Column58", "Column59", "Column60", "Column61", "Column62", "Column63", "Column64", "Column65", "Column66", "Column67", "Column68", "Column69", "Column70", "Column71", "Column72", "Column73", "Column74", "Column75", "Column76", "Column77", "Column78", "Column79", "Column80", "Column81", "Column82", "Column83", "Column84", "Column85", "Column86", "Column87", "Column88", "Column89", "Column90", "Column91", "Column92", "Column93", "Column94", "Column95", "Column96", "Column97"}, {"Column1", "Column2", "Column3", "Column4", "Column5", "Column6", "Column7", "Column8", "Column9", "Column10", "Column11", "Column12", "Column13", "Column14", "Column15", "Column16", "Column17", "Column18", "Column19", "Column20", "Column21", "Column22", "Column23", "Column24", "Column25", "Column26", "Column27", "Column28", "Column29", "Column30", "Column31", "Column32", "Column33", "Column34", "Column35", "Column36", "Column37", "Column38", "Column39", "Column40", "Column41", "Column42", "Column43", "Column44", "Column45", "Column46", "Column47", "Column48", "Column49", "Column50", "Column51", "Column52", "Column53", "Column54", "Column55", "Column56", "Column57", "Column58", "Column59", "Column60", "Column61", "Column62", "Column63", "Column64", "Column65", "Column66", "Column67", "Column68", "Column69", "Column70", "Column71", "Column72", "Column73", "Column74", "Column75", "Column76", "Column77", "Column78", "Column79", "Column80", "Column81", "Column82", "Column83", "Column84", "Column85", "Column86", "Column87", "Column88", "Column89", "Column90", "Column91", "Column92", "Column93", "Column94", "Column95", "Column96", "Column97"}),
    #"Removed Top Rows" = Table.Skip(#"Expanded Data",2),
    #"Promoted Headers" = Table.PromoteHeaders(#"Removed Top Rows", [PromoteAllScalars=true]),
    #"Removed Other Columns" = Table.SelectColumns(#"Promoted Headers",{"Employee ID", "Employee Status", "CostCenter Code", "People Mgr L4 Email", "People Mgr L5 Chief", "People Mgr L6 Chief", "Reported Hire Date", "PIT Date"}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Removed Other Columns",{{"Employee ID", Int64.Type}, {"Employee Status", type text}, {"CostCenter Code", type text}, {"People Mgr L4 Email", type text}, {"People Mgr L5 Chief", type text}, {"People Mgr L6 Chief", type text}, {"Reported Hire Date", type date}, {"PIT Date", type date}}),
    #"Filtered Rows1" = Table.SelectRows(#"Changed Type1", each ([People Mgr L4 Email] = "peter.mrazik@dxc.com") and ([Employee Status] = "Active")),
    #"Replaced Value" = Table.ReplaceValue(#"Filtered Rows1","",null,Replacer.ReplaceValue,{"People Mgr L6 Chief"}),
    #"Replace L6 with L5" = Table.ReplaceValue(#"Replaced Value", null, each _[People Mgr L5 Chief], Replacer.ReplaceValue, {"People Mgr L6 Chief"}),
    Added_Payroll_Date = Table.AddColumn(#"Replace L6 with L5", "Payroll_Date", each Date.AddMonths([PIT Date], -1), type date),
    #"Filtered Rows2" = Table.SelectRows(Added_Payroll_Date, each [Reported Hire Date] < Date.StartOfMonth([PIT Date])),
    GroupedRows = Table.Group(#"Filtered Rows2", {"Payroll_Date", "CostCenter Code"}, {{"Count of Emp", each Table.RowCount(_), Int64.Type}}),
    Added_CCC_YearMonth_Key = Table.AddColumn(GroupedRows, "CCC_YearMonth_Key", each [CostCenter Code] & "-" & Text.From(Date.Year([Payroll_Date])) & Text.From(Date.Month([Payroll_Date])), type text)
in
    Added_CCC_YearMonth_Key

// Append

let
    Source = Table.Combine({CLC_Feb_Actual, #"CLC_Jan", #"CLC_Dec", #"CLC_Nov"}),
    #"Removed Other Columns" = Table.SelectColumns(Source,{"CostCenter_Code", "L6_EID", "L6_Name", "L6_Email", "L5_EID", "L5_Name", "L5_Email", "Date"}),
    #"Invoked Custom Function" = Table.AddColumn(#"Removed Other Columns", "Get Fiscal Month", each #"Get Fiscal Month"([Date])),
    #"Removed Columns" = Table.RemoveColumns(#"Invoked Custom Function",{"Get Fiscal Month"}),
    #"Trimmed Text" = Table.TransformColumns(#"Removed Columns",{{"CostCenter_Code", Text.Trim, type text}, {"L6_Name", Text.Trim, type text}, {"L5_Name", Text.Trim, type text}}),
    Custom1 = Table.AddColumn(#"Trimmed Text", "CCC_YearMonth_Key", each [CostCenter_Code] & "-" & Text.From(Date.Year([Date])) & Text.From(Date.Month([Date])), type text),
    #"Merged Queries" = Table.NestedJoin(Custom1, {"CCC_YearMonth_Key"}, Employees, {"CCC_YearMonth_Key"}, "Employees", JoinKind.LeftOuter),
    #"Expanded Employees" = Table.ExpandTableColumn(#"Merged Queries", "Employees", {"Count of Emp"}, {"Count of Emp"}),
    #"Replaced Value" = Table.ReplaceValue(#"Expanded Employees","Pavel Novak","Novak, Pavel",Replacer.ReplaceText,{"L6_Name"}),
    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value","Ziak,Juraj","Ziak, Juraj",Replacer.ReplaceText,{"L6_Name"})
in
    #"Replaced Value1"